{"version":3,"sources":["Layout/Sidenav.jsx","../../src/index.js","Pages/Introduction.jsx","Pages/GetStarted.jsx","Pages/Settings.jsx","Pages/Api.jsx","Layout/Main.jsx","App.js","index.js"],"names":["Sidenav","Component","constructor","super","triggerNav","this","setState","isNav","state","menus","render","className","id","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","src","alt","map","value","index","key","YtLoader","props","useState","settings","setSetting","percentage","setPercentage","show","setShow","isStart","setStart","barcolor","setBarColor","spincolor","setSpinColor","transitionSpeed","useEffect","setTimeout","interval","setInterval","parseInt","clearInterval","styles","style","background","transition","transform","role","boxShadow","borderTopColor","borderLeftColor","onEnd","Introduction","start","language","docco","href","target","GetStarted","Settings","startLoader","setStartLoader","triggerEnd","options","greenoptions","yellowoptions","disoptions","setOption","temp","console","log","disabled","Api","users","setUsers","fetchUser","a","fetch","then","data","json","catch","err","length","user","name","Main","exact","path","component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e873861.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Sidenav extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            menus: ['introduction', 'getstarted','settings', 'api'],\r\n            isNav: false\r\n        };\r\n    }\r\n\r\n    triggerNav = () => {\r\n        this.setState({ isNav: !this.state.isNav})\r\n    }\r\n\r\n    render() {\r\n        const {isNav} = this.state;\r\n        //var seaText = this.state.sendChild;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" id=\"sideNav\">\r\n                \r\n                <button onClick={this.triggerNav} className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <Link className=\"navbar-brand js-scroll-trigger\" to=\"/react-ytloader\">\r\n                    <span className=\"d-block d-lg-none\">React Youtube Loader</span>\r\n                    <span className=\"d-none d-lg-block\">\r\n                        <img className=\"img-fluid img-profile rounded-circle mx-auto mb-2\" \r\n                        src=\"https://raw.githubusercontent.com/iamnachi/react-ytloader/gh-pages/img/photo.jpg\" alt=\"\"/>\r\n                    </span>\r\n                </Link>\r\n                <div className={ isNav ? `collapse navbar-collapse show` : `collapse navbar-collapse`} id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav\">\r\n                        {this.state.menus.map((value, index) => {\r\n                            return (\r\n                                <li className=\"nav-item\" key={index}>\r\n                                    <Link onClick={this.triggerNav} className=\"nav-link js-scroll-trigger\" to={`/react-ytloader/${value}`}>{value}</Link>\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                \r\n            </nav>\r\n            );\r\n            \r\n    }\r\n}\r\n        \r\n        export default Sidenav;\r\n","import React, { useState, useEffect } from 'react';\nimport styles from './styles.module.css';\n\nconst YtLoader = (props) => {\n\n  const [ settings, setSetting ] = useState(props.settings);\n  const [ percentage, setPercentage] = useState(-100);\n  const [ show, setShow] = useState(false);\n  const [ isStart, setStart]  = useState((settings?.isStart) ? settings?.isStart : false);\n  const [ barcolor, setBarColor] =  useState((settings?.barcolor) ? settings?.barcolor : '#c40b0a');\n  const [ spincolor, setSpinColor] =  useState((settings?.spincolor) ? settings?.spincolor : '#c40b0a');\n  const [ transitionSpeed, setSpeed ]  =  useState((settings?.transitionSpeed) ? settings?.transitionSpeed : 200);\n  \n  useEffect ( () => {\n    setSetting(props.settings);\n    setStart(props.settings?.isStart);\n    setBarColor(props.settings?.barcolor);\n    setSpinColor(props.settings?.spincolor);\n    //setSpeed(props.settings?.transitionSpeed);\n  }, [props.settings]);\n\n  useEffect ( () => {\n    //console.log(isStart, show );\n    //(settings?.barcolor) ? setBarColor(settings?.barcolor) : setBarColor('#29d')\n    //(settings?.spincolor) ? setSpinColor(settings?.spincolor) : setSpinColor('#29d')\n    //(settings?.transitionSpeed) ? setSpeed(settings?.transitionSpeed) : setSpeed(3000)\n    if(isStart) {\n      setPercentage(-100); setShow(true);\n    } else {\n      setPercentage(0);\n      \n    }\n  }, [isStart])\n\n  useEffect( () => {\n    if(percentage === 0) {\n      setTimeout(() => {\n        setShow(false); props.onEnd(); \n      }, transitionSpeed)\n    }\n    const interval =  setInterval(() =>  {      \n      if(percentage !== 0) setPercentage(parseInt(percentage) + 10); \n    }, transitionSpeed)\n    \n    return () => clearInterval(interval); \n  }, [percentage])\n \n  return (\n    <div id={styles.ytloader} className={ (show === false) ? styles.hide : '' }>\n      <div className={styles.bar} style={{background: barcolor, transition: `all ${transitionSpeed}ms ease 0s`, transform: `translate3d(${percentage}%, 0px, 0px)`}} role=\"bar\"><div className={styles.peg} style={{ boxShadow: `0 0 10px ${barcolor}, 0 0 5px ${barcolor}`}}></div></div>\n      <div className={styles.spinner} role=\"spinner\"><div className={styles.icon} style={{ borderTopColor: spincolor, borderLeftColor: spincolor }}></div></div>\n    </div>\n  )\n  \n}\n\nYtLoader.defaultProps  = {\n  onEnd: () => {\n\n  }\n}\n\nexport default YtLoader;","import React, { useState } from 'react';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport { Link } from 'react-router-dom';\r\nimport YtLoader  from 'react-ytloader';\r\n\r\nfunction Introduction() {\r\n    const [ start, setStart ] = useState(false);\r\n\r\n    const changeStart = () => {\r\n      setStart(true);\r\n    }\r\n\r\n    const triggerEnd = () => {\r\n      setStart(false);\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>React Youtube Loader</h3> <hr></hr>\r\n        <p>Lets install the npm module for <b>react youtube loader</b>.</p>\r\n        <div className=\"container\">\r\n          <YtLoader settings={{isStart: start}} onEnd={triggerEnd} /> \r\n          <SyntaxHighlighter language=\"powershell\" style={docco}>\r\n              {\r\n                `npm install react-ytloader --save`\r\n              }\r\n          </SyntaxHighlighter>\r\n          <p>\r\n            The code base was maintained in the <a href=\"https://github.com/iamnachi/react-ytloader-base\" target=\"_blank\">github</a>.\r\n          </p>\r\n          <button className=\"btn btn-dark\"  onClick={changeStart}>Click me to see it</button>\r\n          <p></p>\r\n          <p>  \r\n            After installation lets <Link to=\"/react-ytloader/getstarted\">get started</Link> now.\r\n          </p>\r\n          <p> \r\n            If you have any queries <a href=\"mailto:nachisinbox@gmail.com\">contact me</a>.\r\n          </p>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n  \r\n  export default Introduction;\r\n  ","import React from 'react';\r\nimport YtLoader  from 'react-ytloader';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction GetStarted() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Getting started</h3> <hr></hr>\r\n        <p>Lets start using react youtube loader in your application. It can be done in two simple steps.</p>\r\n        <YtLoader settings={{isStart: true}} /> \r\n        \r\n        <div className=\"container\">\r\n            <h6>1 : Import the module and CSS</h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {\r\n                `import { YtLoader } from 'react-ytloader';\\nimport 'react-ytloader/dist/index.css';`\r\n              }\r\n            </SyntaxHighlighter>\r\n            <h6>2 : Include the loader in your component</h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {`function Component() {\\n return (<YtLoader settings={{isStart: true}} />)\\n}`}\r\n            </SyntaxHighlighter>\r\n            <p>When this page refresh, loader will load. we can also <Link to=\"/react-ytloader/settings\">customize</Link> it.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default GetStarted;\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport YtLoader  from 'react-ytloader';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Settings() {\r\n    const [startLoader, setStartLoader] = useState(false);\r\n    \r\n    const triggerStart = () => {\r\n      setStartLoader(true);\r\n    }\r\n\r\n    const triggerEnd = () => {\r\n      setStartLoader(false);\r\n    }\r\n\r\n    const options = { \r\n      barcolor: '#000', \r\n      spincolor: '#000', \r\n      transitionSpeed: 500,\r\n      isStart: startLoader,\r\n    }\r\n\r\n    const greenoptions = { \r\n      barcolor: 'green', \r\n      spincolor: 'green', \r\n      transitionSpeed: 500,\r\n      isStart: startLoader,\r\n    }\r\n\r\n    const yellowoptions = { \r\n      barcolor: 'yellow', \r\n      spincolor: 'yellow', \r\n      transitionSpeed: 500,\r\n      isStart: startLoader,\r\n    }\r\n\r\n    const [disoptions, setOption] = useState(options);\r\n    \r\n    const triggerGreen = () => {\r\n      setOption(greenoptions);\r\n      setStartLoader(true);\r\n    }\r\n\r\n    const triggerYellow = () => {\r\n      setOption(yellowoptions);\r\n      setStartLoader(true);\r\n    }\r\n\r\n    useEffect( () => {\r\n      let temp = {...disoptions};\r\n      temp.isStart = startLoader;\r\n      setOption(temp);\r\n    }, [startLoader])\r\n\r\n    console.log(disoptions)\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>Settings</h3> <hr></hr>\r\n        \r\n        <YtLoader settings={disoptions} onEnd={triggerEnd}/>\r\n\r\n        <div className=\"container\">\r\n            <p>The demo with the options and buttons to control the loader is given below.</p>\r\n            <button disabled={startLoader} className=\"btn btn-dark mr-2\" onClick={triggerStart}>Start</button> \r\n            <button disabled={!startLoader} className=\"btn btn-dark mr-2\" onClick={triggerEnd}>End</button>\r\n            \r\n            <button disabled={startLoader} className=\"btn btn-success mr-2\" onClick={triggerGreen}>Green</button>\r\n            <button disabled={startLoader} className=\"btn btn-warning mr-2\" onClick={triggerYellow}>Yellow</button>\r\n            \r\n            <br /><br />\r\n            <p>We can change the color, speed of our loader. it can be done through four simple steps.</p>\r\n            <h6>1 : Import the module and CSS</h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {\r\n                `import { YtLoader } from 'react-ytloader';\\nimport 'react-ytloader/dist/index.css';`\r\n              }\r\n            </SyntaxHighlighter>\r\n            <h6>2: Create a state and add trigger methods for it</h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {`const [startLoader, setStartLoader] = useState(false);\\n\\nconst triggerStart = () => {\\nsetStartLoader(true);\\n}\\n\\nconst triggerEnd = () => {\\nsetStartLoader(false);\\n}`}\r\n            </SyntaxHighlighter>\r\n            <h6>3: We can configure options for the loader </h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {`const options = {\\nbarcolor: '#000', //set bar color\\nspincolor: '#000', //set spinner color\\ntransitionSpeed: 200, //set speed\\nisStart: true, //load if true\\n}`}\r\n            </SyntaxHighlighter>\r\n            <h6>4: Give the loader with config and method </h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {`return (<YtLoader settings={options} onEnd={triggerEnd}/>)`}\r\n            </SyntaxHighlighter>\r\n\r\n            <h5>Lets put all in one code </h5><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {`function Component() {\\n\\nconst [startLoader, setStartLoader] = useState(false);\\n\\nconst triggerStart = () => {\\nsetStartLoader(true);\\n}\\n\\nconst triggerEnd = () => {\\nsetStartLoader(false);\\n}\\n\\nconst options = {\\nbarcolor: '#000', //set bar color\\nspincolor: '#000', //set spinner color\\ntransitionSpeed: 200, //set speed\\nisStart: true, //load if true\\n}\\n\\nreturn (\\n<YtLoader settings={options} onEnd={triggerEnd}/>\\n<button disabled={startLoader} className=\"btn btn-dark mr-2\" onClick={triggerStart}>Start</button>\\n<button disabled={!startLoader} className=\"btn btn-dark\" onClick={triggerEnd}>End</button>\\n)\\n}`}\r\n            </SyntaxHighlighter>\r\n            <p>For fetching api, we can see the <Link to=\"/react-ytloader/api\">example</Link>.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Settings;\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport YtLoader  from 'react-ytloader';\r\n\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Api() {\r\n    const [startLoader, setStartLoader] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const triggerStart = () => {\r\n      setStartLoader(true);\r\n    }\r\n\r\n    const triggerEnd = () => {\r\n      setStartLoader(false);\r\n    }\r\n\r\n    const options = { \r\n      barcolor: '#c40b0a', \r\n      spincolor: '#c40b0a', \r\n      transitionSpeed: 200,\r\n      isStart: startLoader,\r\n    }\r\n\r\n    const fetchUser = async () => {\r\n      setUsers([])\r\n      triggerStart();\r\n      await fetch(\"https://jsonplaceholder.typicode.com/users\").then( data => data.json()).then(\r\n        json => {\r\n        //console.log(json)\r\n        setTimeout( () => {\r\n          triggerEnd();\r\n        \r\n          setUsers(json) \r\n        }, 2000) \r\n        \r\n      }).catch( (err) => {\r\n        triggerEnd();\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h3>API</h3> <hr></hr>\r\n        <YtLoader settings={options} onEnd={triggerEnd}/>\r\n        <div className=\"container\">\r\n            <p>The demo using fetch api is given below. </p>\r\n            <button disabled={startLoader} className=\"btn btn-dark\" onClick={fetchUser}>Fetch</button>\r\n            {\r\n              (users.length > 0) ? \r\n                users.map( (user, key) => {\r\n                  return (\r\n                  <div className=\"card mt-2\"  key={user.id}>\r\n                    <div className=\"card-header\">\r\n                    {user.name}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h6 className=\"card-title\">{user.name}</h6>\r\n                    </div>\r\n                  </div>);\r\n                }) \r\n              : (startLoader) ? <p className=\"mt-2\">loading...</p> : <p></p>\r\n            }\r\n            <p></p>\r\n            <h6>Lets modify the code sligtly as shown below. </h6><hr></hr>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n              {`function Component() {\\n\\nconst [startLoader, setStartLoader] = useState(false);\\n\\nconst triggerStart = () => {\\nsetStartLoader(true);\\n}\\n\\nconst triggerEnd = () => {\\nsetStartLoader(false);\\n}\\n\\nconst options = {\\nbarcolor: '#000', //set bar color\\nspincolor: '#000', //set spinner color\\ntransitionSpeed: 200, //set speed\\nisStart: true, //load if true\\n}\\n\\nconst fetchUser = async () => {\\n setUsers([]);\\n triggerStart();\\n await fetch(\"https://jsonplaceholder.typicode.com/users\").then( data => data.json()).then(\\n  json => {\\n   setTimeout( () => {\\n    triggerEnd();\\n    setUsers(json);\\n  }, 2000)\\n }).catch( (err) => {\\n  triggerEnd();\\n })\\n};\\n\\nreturn (\\n<YtLoader settings={options} onEnd={triggerEnd}/>\\n<button disabled={startLoader} className=\"btn btn-dark mr-2\" onClick={fetchUser}>Fetch</button>\\n)\\n}`}\r\n            </SyntaxHighlighter>\r\n            \r\n            \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Api;\r\n  ","import React, { Component } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Route} from 'react-router-dom';\r\n\r\nimport Introduction from '../Pages/Introduction';\r\nimport GetStarted from '../Pages/GetStarted';\r\nimport Settings from '../Pages/Settings';\r\nimport Api from '../Pages/Api';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid p-0 m-2\">\r\n                <Route exact path=\"/react-ytloader\" component={Introduction} />\r\n                <Route path=\"/react-ytloader/introduction\" component={Introduction} />\r\n                <Route path=\"/react-ytloader/getstarted\" component={GetStarted} />\r\n                <Route path=\"/react-ytloader/settings\" component={Settings} />\r\n                <Route path=\"/react-ytloader/api\" component={Api} />\r\n            </div>\r\n        );\r\n    }\r\n}        \r\nexport default Main;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Sidenav from './Layout/Sidenav';\nimport Main from './Layout/Main';\n\nimport './bootstrap.min.css';\nimport 'react-ytloader/dist/index.css';\n\nconst App = () => {\n  \n  return (\n      <div className=\"App\">\n        <Router>\n          <Sidenav></Sidenav>\n          <Main></Main>\n        </Router>\n      </div>\n  )\n}\n\nexport default App","import './index.min.css'\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}